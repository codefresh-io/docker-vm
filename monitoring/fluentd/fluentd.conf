<source>
  @type forward
  @id forward_input
</source>

<source>
  @type debug_agent
  @id debug_agent_input

  bind 127.0.0.1
  port 24230
</source>

<match debug.**>
  @type stdout
  @id stdout_output
</match>

<source>
  @type forward
  tag docker.containers
  port 24224
  bind 0.0.0.0
</source>

<filter docker.containers>
  @type record_transformer
  renew_record true
  <record>
    instance "#{ENV['INSTANCE_PUBLIC_IP']}"
    log_source "containers"
    message ${record["log"]}
    account_name ${record["io.codefresh.accountName"]}
    operation_name ${record["io.codefresh.operationName"]}
    pipeline_name ${record["io.codefresh.pipelineName"]}
    build_id ${record["io.codefresh.processId"]}
    owner ${record["io.codefresh.owner"]}
  </record>
  keep_keys container_id, log_source, source, message
</filter>

<match docker.containers>
  @type loki
  url "http://#{ENV['MON_HOST_INTERNAL_NAME']}:3100"
  <label>
    instance $.instance
    log_source $.log_source
    container_id $.container_id
    account_name $.account_name
    operation_name $.operation_name
    pipeline_name $.pipeline_name
    build_id $.build_id
  </label>
  flush_interval 10s
  flush_at_shutdown true
  buffer_chunk_limit 1m
</match>

<source>
  @type windows_eventlog
  @id windows_eventlog
  channels application
  keys source_name, description
  read_interval 2
  tag winevt.raw
  <storage>
    persistent false 
  </storage>
</source>

<filter winevt.raw>
  @type grep
  <regexp>
    key source_name
    pattern /docker/
  </regexp>
</filter>

<filter winevt.raw>
  @type record_transformer
  renew_record true
  <record>
    instance "#{ENV['INSTANCE_PUBLIC_IP']}"
    log_source "dockerd"
    message ${record["description"]}
  </record>
</filter>

<match winevt.raw>
  @type loki
  url "http://#{ENV['MON_HOST_INTERNAL_NAME']}:3100"
  <label>
    instance $.instance
    log_source $.log_source
  </label>
  flush_interval 10s
  flush_at_shutdown true
  buffer_chunk_limit 1m
</match>
